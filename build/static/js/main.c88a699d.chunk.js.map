{"version":3,"sources":["logo-hb.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","diety","regex","RegExp","App","props","state","plec","value","label","wzrost","waga","wiek","cel","aktywnosc","wynik","dieta","uzupelnijDane","changePlec","bind","changeWzrost","changeWiek","changeWaga","changeCel","changeAktywnosc","e","this","setState","test","target","Boolean","Math","ceil","najblizszaDieta","closest","i","length","reduce","prev","curr","abs","console","log","className","src","logo","onChange","defaultValue","options","onClick","obliczZapotrzebowanie","React","Component","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c88a699d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-hb.184cc0c3.png\";","import React from 'react';\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport logo from './logo-hb.png'\nimport Select from \"react-select\";\n\nconst diety = [1300, 1600, 1800, 2000, 2300, 2800]\nconst regex = new RegExp(/^([1-9]|[0-9][.][0-9]|[1-9][.]|[1-9][.][0-9][0-9]|[1-9][0-9]|[1-9][0-9][.][0-9]|[1-9][0-9][0-9][.]|[1][0-9][0-9]|[1-9][0-9][.][0-9][0-9]|[1-9][1-9][.][0-9][0-9]|[1][0-9][0-9][.][0-9]|[1][0-9][0-9][.][0-9][0-9]|20[0-0])$/)\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            plec: {value: -161, label: 'Kobieta'},\n            wzrost: '',\n            waga: '',\n            wiek: '',\n            cel: {value: 0, label: 'Redukcja'},\n            aktywnosc: {value: 0, label: 'Niska'},\n            wynik: '',\n            dieta: '',\n            uzupelnijDane: false\n        }\n\n        this.changePlec = this.changePlec.bind(this)\n        this.changeWzrost = this.changeWzrost.bind(this)\n        this.changeWiek = this.changeWiek.bind(this)\n        this.changeWaga = this.changeWaga.bind(this)\n        this.changeCel = this.changeCel.bind(this)\n        this.changeAktywnosc = this.changeAktywnosc.bind(this)\n    }\n\n    changePlec(e) {\n        this.setState({plec: e})\n    }\n\n    changeWzrost(e) {\n        if (regex.test(e.target.value) || e.target.value === \"\") {\n            this.setState({wzrost: e.target.value})\n        }\n    }\n\n    changeWiek(e) {\n        if (regex.test(e.target.value) || e.target.value === \"\") {\n            this.setState({wiek: e.target.value})\n        }\n    }\n\n    changeWaga(e) {\n        if (regex.test(e.target.value) || e.target.value === \"\") {\n            this.setState({waga: e.target.value})\n        }\n    }\n\n    changeCel(e) {\n        this.setState({cel: e})\n    }\n\n    changeAktywnosc(e) {\n        this.setState({aktywnosc: e})\n    }\n\n    obliczZapotrzebowanie() {\n        const {plec, wzrost, waga, wiek, cel, aktywnosc} = this.state\n\n        if (Boolean(wzrost) && Boolean(waga) && Boolean(wiek)) {\n            let wynik = (wzrost * 6.25) + (waga * 9.99) - (wiek * 4.92)\n\n            wynik += plec.value\n            wynik += cel.value\n            wynik += aktywnosc.value\n            wynik = Math.ceil(wynik / 10) * 10\n\n            let dieta = this.najblizszaDieta(wynik)\n\n            this.setState({wynik: wynik + ' kcal', dieta: dieta, uzupelnijDane: false})\n        } else {\n            this.setState({uzupelnijDane: true})\n        }\n    }\n\n    najblizszaDieta(wynik) {\n        let closest = null;\n        if (this.state.cel.label === 'Utrzymanie wagi'){\n            for (let i=0; i<diety.length; i++){\n                if (wynik < diety[i]){\n                    closest = diety[i-1];\n                    break;\n                }\n            }\n        } else {\n            closest = diety.reduce((prev, curr) => {\n                return (Math.abs(curr - wynik) < Math.abs(prev - wynik) ? curr : prev);\n            });\n        }\n\n        console.log(closest)\n\n        switch (closest) {\n            case 1300:\n                return closest + ' kcal BASIC / WEGE';\n            case 1600:\n                return closest + ' kcal BASIC / WEGE';\n            case 1800:\n                return closest + ' kcal BASIC / WEGE / GYM';\n            case 2000:\n                return closest + ' kcal BASIC / WEGE';\n            case 2300:\n                return closest + ' kcal BASIC / WEGE';\n            case 2800:\n                return closest + ' kcal GYM';\n        }\n    }\n\n    render() {\n\n        const {plec, wzrost, waga, wiek, cel, aktywnosc, wynik, dieta, uzupelnijDane} = this.state\n\n        return <div className=\"main\">\n            <div className=\"logo\">\n                <img src={logo} className={'img-fluid'}/>\n            </div>\n            <div className=\"bmr-calc\">\n\n                <label>Płeć:</label>\n                <Select\n                    onChange={this.changePlec}\n                    defaultValue={plec}\n                    options={[\n                        {value: -161, label: 'Kobieta'},\n                        {value: 5, label: 'Mężczyzna'},\n                    ]}\n                />\n\n                <label>Wiek:</label>\n                <input className={'form-control'} value={wiek} onChange={this.changeWiek}/>\n\n                <label>Waga:</label>\n                <input className={'form-control'} value={waga} onChange={this.changeWaga}/>\n\n                <label>Wzrost:</label>\n                <input className={'form-control'} value={wzrost} onChange={this.changeWzrost}/>\n\n                <label>Aktywność fizyczna:</label>\n                <Select\n                    onChange={this.changeAktywnosc}\n                    defaultValue={aktywnosc}\n                    options={[\n                        {value: 0, label: 'Niska'},\n                        {value: 300, label: 'Średnia'},\n                        {value: 600, label: 'Wysoka'},\n                    ]}\n                />\n\n                <label>Cel:</label>\n                <Select\n                    onChange={this.changeCel}\n                    defaultValue={cel}\n                    options={[\n                        {value: 0, label: 'Redukcja'},\n                        {value: 300, label: 'Utrzymanie wagi'},\n                        {value: 600, label: 'Masa'},\n                    ]}\n                />\n\n                <div>\n                    <button className={'btn btn-info'} onClick={() => this.obliczZapotrzebowanie()}>Oblicz\n                        zapotrzebowanie\n                    </button>\n                    {uzupelnijDane ? <div className={'uzupelnijDane'}>Uzupełnij dane</div> :\n                        <>\n                            <div className={'wynik'}>{wynik !== '' ?\n                                <div>Twoje zapotrzebowanie to: <div className={'font-weight-bolder'}>{wynik}</div>\n                                </div> : null}</div>\n                            <div className={'dieta'}>{dieta !== '' ?\n                                <div>Proponowana dieta: <div className={'font-weight-bolder'}>{dieta}</div>\n                                </div> : null}</div>\n                            <div>\n                                <small>Wyliczenia z powyższego kalkulatora są wyliczeniami orientacyjnymi, nie należy na nich bazować w 100%.</small>\n                            </div>\n                        </>}\n                </div>\n\n            </div>\n        </div>\n    }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}